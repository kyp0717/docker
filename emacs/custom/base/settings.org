
Super Duper Config
* Todo
** increase/decrease fontsize
** expand to full screen
   
* Settings
  #+BEGIN_SRC emacs-lisp
    (setq inhibit-splash-screen t)
    (setq inhibit-startup-message t)
    ; (menu-bar-mode -1)
    (toggle-scroll-bar -1)
    (tool-bar-mode -1)
    (global-set-key (kbd "C-=") 'text-scale-increase)
    (global-set-key (kbd "C--") 'text-scale-decrease)
  #+END_SRC

  #+RESULTS:
  : text-scale-decrease

* Packages
   #+BEGIN_SRC emacs-lisp

     (require 'package)
     (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
     ;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
     ;; and `package-pinned-packages`. Most users will not need or want to do this.
     ;;(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
     (package-initialize)
     ;;(package-refresh-contents)

     ;; Download Evil
     (unless (package-installed-p 'evil)
       (package-install 'evil ))

     (package-install 'counsel)
     (package-install 'ivy)
     (package-install 'swiper)
     (package-install 'smart-mode-line)
     (package-install 'powerline)
     (package-install 'gruvbox-theme)
     (package-install 'airline-themes)
     (package-install 'org)
     (package-install 'ido)
     (package-install 'tuareg)
     (package-install 'projectile)
     (package-install 'company)
     (package-install 'org-bullets)
     (package-install 'helm)
     (package-install 'evil)
     (package-install 'evil-org)
     ;;(package-install 'evil-org-agenda)
     (package-install 'evil-commentary)
     (package-install 'evil-collection)
   #+END_SRC
* Evil Mode
** Config
   #+BEGIN_SRC emacs-lisp
     ;; Enable Evil
     ;; Evil
     (use-package evil 
     :init
     (setq evil-want-integration t) ;; This is optional since it's already set to t by default.
     (setq evil-want-keybinding nil)
     :config
	 (evil-mode 1)
	 (setq evil-emacs-state-cursor '("red" box)
		 evil-normal-state-cursor '("green" box)
		 evil-visual-state-cursor '("orange" box)
		 evil-insert-state-cursor '("blue" bar)
		 evil-replace-state-cursor '("red" bar)
		 evil-operator-state-cursor '("red" hollow)
		 evil-cross-lines t)
     )

     (use-package evil-collection
     :after evil
     ;; :ensure t
     :config
     (evil-collection-init)
     )
   #+END_SRC
   
** Comments
   #+BEGIN_SRC emacs-lisp
     (require 'evil-commentary)
     (evil-commentary-mode)
     (evil-collection-init)
   #+END_SRC
   
* Org Mode Config
** settings
  #+BEGIN_SRC emacs-lisp
   (setq org-hide-emphasis-markers t)
   (require 'org-tempo) 
  #+END_SRC

  #+RESULTS:
  : org-tempo

  
** bullets
  #+BEGIN_SRC emacs-lisp
    (use-package org-bullets
	:config
	(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))) 
  #+END_SRC

** evil integration
  #+BEGIN_SRC emacs-lisp
    (add-to-list 'load-path "~/.emacs.d/plugins/evil-org-mode")
    (require 'evil-org)
    (add-hook 'org-mode-hook 'evil-org-mode)
    (evil-org-set-key-theme '(navigation insert textobjects additional calendar))
    (require 'evil-org-agenda)
    (evil-org-agenda-set-keys)
  #+END_SRC

* Completion

** ivy setup
  #+BEGIN_SRC emacs-lisp
    ;;(add-to-list 'load-path "~/github/swiper/")
    (require 'ivy)
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers t)
    (setq ivy-count-format "(%d/%d) ")
    (global-set-key (kbd "C-s") 'swiper-isearch)
    (global-set-key (kbd "M-x") 'counsel-M-x)
    (global-set-key (kbd "C-x C-f") 'counsel-find-file)
    (global-set-key (kbd "M-y") 'counsel-yank-pop)
    (global-set-key (kbd "<f1> f") 'counsel-describe-function)
    (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
    (global-set-key (kbd "<f1> l") 'counsel-find-library)
    (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
    (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
    (global-set-key (kbd "<f2> j") 'counsel-set-variable)
    (global-set-key (kbd "C-x b") 'ivy-switch-buffer)
    (global-set-key (kbd "C-c v") 'ivy-push-view)
    (global-set-key (kbd "C-c V") 'ivy-pop-view)

  #+END_SRC


* General Settings
** Don't show startup msg
   #+BEGIN_SRC emacs-lisp
   ; (global-hl-mode +1)
   #+END_SRC
** Comments

* UI
** Modeline
   #+begin_src emacs-lisp
    ;; Theme settings
    (add-to-list 'custom-theme-load-path "~/.emacs.d/themes")

    (require 'powerline)
    (powerline-vim-theme)
    (require 'airline-themes)
    (load-theme 'airline-onedark t)
   #+end_src

* Modes

